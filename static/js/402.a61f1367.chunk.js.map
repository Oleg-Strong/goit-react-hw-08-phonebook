{"version":3,"file":"static/js/402.a61f1367.chunk.js","mappings":"wUAqKA,EA5JyB,WACvB,IAAIA,EAAQC,EAAAA,SAAaC,MAAM,CAC7BC,KAAMF,EAAAA,SAEHG,QACC,yHACA,qBAEDC,SAAS,0BACZC,MAAOL,EAAAA,SAAaK,QAAQD,SAAS,2BACrCE,SAAUN,EAAAA,SAAaI,SAAS,gCAS5BG,GAAWC,EAAAA,EAAAA,MAMjB,OACE,SAACC,EAAA,EAAD,CACEC,EAAG,EACHC,GAAI,CACFC,MAAO,QAHX,UAME,SAAC,KAAD,CACEC,cApBgB,CACpBX,KAAM,GACNG,MAAO,GACPC,SAAU,IAkBNQ,iBAAkBf,EAClBgB,SAfe,SAACC,EAAD,GAA4B,IAAjBC,EAAgB,EAAhBA,UAC9BV,GAASW,EAAAA,EAAAA,IAASF,IAClBC,GACD,EASG,SAKG,SAAAE,GACC,OACE,UAAC,KAAD,YAQE,SAAC,KAAD,CACEC,GAAIC,EAAAA,EACJC,GAAG,6BACHC,QAAQ,SACRC,MAAM,OACNC,KAAK,OACLvB,KAAK,OACLwB,MAAM,UACNC,WAAS,EACTC,aAAa,MACbC,YAAY,SAAC,KAAD,CAAc3B,KAAK,SAC/B4B,MAAOX,EAAMY,OAAO7B,MAAQiB,EAAMa,QAAQ9B,KAC1C+B,OAAO,YAET,SAAC,KAAD,CACEb,GAAIC,EAAAA,EACJC,GAAG,6BACHC,QAAQ,SACRC,MAAM,QACNC,KAAK,QACLvB,KAAK,QACLwB,MAAM,UACNC,WAAS,EACTC,aAAa,MACbC,YAAY,SAAC,KAAD,CAAc3B,KAAK,UAC/B4B,MAAOX,EAAMY,OAAO1B,OAASc,EAAMa,QAAQ3B,MAC3C4B,OAAO,YAGT,SAAC,KAAD,CACEb,GAAIC,EAAAA,EACJC,GAAG,6BACHC,QAAQ,SACRC,MAAM,WACNC,KAAK,WACLvB,KAAK,WACLwB,MAAM,UACNC,WAAS,EACTC,aAAa,MACbC,YAAY,SAAC,KAAD,CAAc3B,KAAK,aAC/B4B,MAAOX,EAAMY,OAAOzB,UAAYa,EAAMa,QAAQ1B,SAC9C2B,OAAO,YAGT,SAACC,EAAA,EAAD,CAAQX,QAAQ,YAAYE,KAAK,SAAjC,uBAGA,UAACU,EAAA,EAAD,CACEZ,QAAQ,YACRG,MAAOU,EAAAA,EAAAA,QAAAA,QAAAA,KAFT,8BAKE,SAACC,EAAA,EAAD,CAAcC,KAAK,YAAYC,GAAG,SAAlC,yBAOP,KAgDR,E,UC5HD,EAnCiB,WACf,OACE,SAACC,EAAA,EAAD,CACE7B,GAAI,CACFC,MAAO,QACP6B,OAAQ,QACRC,SAAU,SACVC,UAAW,SACXC,gBAAgB,OAAD,OAASC,EAAT,KACfC,mBAAoB,SACpBC,eAAgB,QAChBC,iBAAkB,aATtB,UAYE,SAACC,EAAA,EAAD,WACE,UAACxC,EAAA,EAAD,CACEE,GAAI,CACFuC,GAAI,OACJC,GAAI,OACJC,QAAS,OACTC,WAAY,SACZC,cAAe,SACf1C,MAAO,QAPX,WAUE,SAACuB,EAAA,EAAD,CAAYZ,QAAQ,KAAKG,MAAOU,EAAAA,EAAAA,QAAAA,QAAAA,OAAhC,uBAGA,SAAC,EAAD,UAKT,C","sources":["components/UserRegisterForm/UserRegisterForm.jsx","pages/Register.jsx"],"sourcesContent":["import { Box, Button, TextField, Typography } from '@mui/material';\nimport NavigateLink from 'components/NavigateLink';\nimport { Formik, ErrorMessage, Field, Form } from 'formik';\nimport { useDispatch } from 'react-redux';\nimport { register } from 'redux/auth/operation';\nimport { theme } from 'theme/theme';\nimport * as yup from 'yup';\nimport 'yup-phone';\n\nconst UserRegisterForm = () => {\n  let scima = yup.object().shape({\n    name: yup\n      .string()\n      .matches(\n        /^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$/,\n        'name is not valid'\n      )\n      .required('name field is required'),\n    email: yup.string().email().required('email field is required'),\n    password: yup.string().required('password field is required'),\n  });\n\n  const initialValues = {\n    name: '',\n    email: '',\n    password: '',\n  };\n\n  const dispatch = useDispatch();\n  const handleSubmit = (values, { resetForm }) => {\n    dispatch(register(values));\n    resetForm();\n  };\n\n  return (\n    <Box\n      p={2}\n      sx={{\n        width: '100%',\n      }}\n    >\n      <Formik\n        initialValues={initialValues}\n        validationSchema={scima}\n        onSubmit={handleSubmit}\n      >\n        {props => {\n          return (\n            <Form>\n              {/* <Box\n                sx={{\n                  display: 'flex',\n                  alignItems: 'center',\n                  flexDirection: 'column',\n                }}\n              > */}\n              <Field\n                as={TextField}\n                id=\"standard-error-helper-text\"\n                variant=\"filled\"\n                label=\"Name\"\n                type=\"text\"\n                name=\"name\"\n                color=\"primary\"\n                fullWidth\n                autoComplete=\"off\"\n                helperText={<ErrorMessage name=\"name\" />}\n                error={props.errors.name && props.touched.name}\n                margin=\"normal\"\n              />\n              <Field\n                as={TextField}\n                id=\"standard-error-helper-text\"\n                variant=\"filled\"\n                label=\"Email\"\n                type=\"email\"\n                name=\"email\"\n                color=\"primary\"\n                fullWidth\n                autoComplete=\"off\"\n                helperText={<ErrorMessage name=\"email\" />}\n                error={props.errors.email && props.touched.email}\n                margin=\"normal\"\n              />\n\n              <Field\n                as={TextField}\n                id=\"standard-error-helper-text\"\n                variant=\"filled\"\n                label=\"Password\"\n                type=\"password\"\n                name=\"password\"\n                color=\"primary\"\n                fullWidth\n                autoComplete=\"off\"\n                helperText={<ErrorMessage name=\"password\" />}\n                error={props.errors.password && props.touched.password}\n                margin=\"normal\"\n              />\n\n              <Button variant=\"contained\" type=\"submit\">\n                Add User\n              </Button>\n              <Typography\n                variant=\"subtitle1\"\n                color={theme.palette.primary.main}\n              >\n                Have an account?\n                <NavigateLink size=\"secondary\" to=\"/login\">\n                  Log In\n                </NavigateLink>\n              </Typography>\n              {/* </Box> */}\n            </Form>\n          );\n        }}\n        {/* <RegisterForm>\n        <RegisterFormLabel>\n          <LabelText>Name:</LabelText>\n          <RegisterFormInput\n            type=\"text\"\n            name=\"name\"\n            required\n            placeholder=\"First and last name\"\n          />\n          <ErrorMessage name=\"name\">\n            {errMsg => <Error>{errMsg}</Error>}\n          </ErrorMessage>\n        </RegisterFormLabel>\n\n        <RegisterFormLabel>\n          <LabelText>Email:</LabelText>\n          <RegisterFormInput\n            type=\"email\"\n            name=\"email\"\n            required\n            placeholder=\"Email\"\n          />\n          <ErrorMessage name=\"email\">\n            {errMsg => <Error>{errMsg}</Error>}\n          </ErrorMessage>\n        </RegisterFormLabel>\n\n        <RegisterFormLabel>\n          <LabelText>Password:</LabelText>\n          <RegisterFormInput\n            type=\"password\"\n            name=\"password\"\n            required\n            placeholder=\"Password\"\n          />\n          <ErrorMessage name=\"password\">\n            {errMsg => <Error>{errMsg}</Error>}\n          </ErrorMessage>\n        </RegisterFormLabel>\n        <RegisterFormBtn type=\"submit\">Add User</RegisterFormBtn>\n        <RegisterFormText>\n          Have an account?<NavLink to=\"/login\">Log In</NavLink>\n        </RegisterFormText>\n      </RegisterForm> */}\n      </Formik>\n    </Box>\n  );\n};\n\nexport default UserRegisterForm;\n","import { Box, Container, Paper, Typography } from '@mui/material';\nimport UserRegisterForm from 'components/UserRegisterForm';\nimport { theme } from 'theme/theme';\nimport bgImg from '../images/bg-images/bg-register-login.jpg';\nconst Register = () => {\n  return (\n    <Paper\n      sx={{\n        width: '100vw',\n        height: '100vh',\n        overflow: 'hidden',\n        overflowY: 'scroll',\n        backgroundImage: `url(${bgImg})`,\n        backgroundPosition: 'center',\n        backgroundSize: 'cover',\n        backgroundRepeat: 'no-repeat',\n      }}\n    >\n      <Container>\n        <Box\n          sx={{\n            pt: '80px',\n            pb: '20px',\n            display: 'flex',\n            alignItems: 'center',\n            flexDirection: 'column',\n            width: '100%',\n          }}\n        >\n          <Typography variant=\"h2\" color={theme.palette.primary.second}>\n            Register\n          </Typography>\n          <UserRegisterForm />\n        </Box>\n      </Container>\n    </Paper>\n  );\n};\n\nexport default Register;\n"],"names":["scima","yup","shape","name","matches","required","email","password","dispatch","useDispatch","Box","p","sx","width","initialValues","validationSchema","onSubmit","values","resetForm","register","props","as","TextField","id","variant","label","type","color","fullWidth","autoComplete","helperText","error","errors","touched","margin","Button","Typography","theme","NavigateLink","size","to","Paper","height","overflow","overflowY","backgroundImage","bgImg","backgroundPosition","backgroundSize","backgroundRepeat","Container","pt","pb","display","alignItems","flexDirection"],"sourceRoot":""}